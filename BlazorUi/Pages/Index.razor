@page "/"
@*@inject MediatR.IMediator _mediator //e' il mediatore ovvero quello che vado a chiamre per fare le mie richieste*@
@inject IHttpClientFactory ClientFactory
<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

@*<ul>
    @foreach(var p in people)
    {
        <li>@p.FirstName @p.LastName</li>
    }
</ul>*@

@code {
    //Come carico la lista di people?Utilizzo meadtR
    //List<PersonModel> people; //all'interno di _Imports ho importato DemoLibrary

    //protected override async Task OnInitializedAsync() //viene chiamato all'inizio quando la pagina viene caricata
    //{
    //    //get list people
    //    //throw new NotImplementedException();
    //    //return base.OnInitializedAsync();
    //    /* Cosa succede?
    //     * _mediator invia una request, con send, di tipo GestPersonListQuery non passando nulla, ma ricevendo una risposta di List<people> 
    //     */
    //    //people = await _mediator.Send(new GetPersonListQuery());
    //}

    private bool getBranchesError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        //var request = new HttpRequestMessage(HttpMethod.Get,
        //    "https://localhost:7211/api/Student");
        //request.Headers.Add("Accept", "application/vnd.github.v3+json");
        //request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        //var client = ClientFactory.CreateClient();

        //var response = await client.SendAsync(request);

        //if (response.IsSuccessStatusCode)
        //{
        //    using var responseStream = await response.Content.ReadAsStreamAsync();
        //    branches = await JsonSerializer.DeserializeAsync
        //        <IEnumerable<GitHubBranch>>(responseStream);
        //}
        //else
        //{
        //    getBranchesError = true;
        //}

        //shouldRender = true;
    }

    //public class GitHubBranch
    //{
    //    [JsonPropertyName("name")]
    //    public string Name { get; set; }
    //}

}

