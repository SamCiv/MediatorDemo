@page "/counter"
@using System.Text.Json
@inject IHttpClientFactory ClientFactory
<PageTitle>Counter</PageTitle>

<h1>Lista Studenti</h1>

@*<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Get Studenti</button>*@

<table class="table">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                Enrollment Date
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach(var s in student)
        {
            <tr>
                <td>
                    @s.FirstName
                </td>
                <td>
                    @s.LastName
                </td>
                <td>
                    @s.EnrollmentDate
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
    private int currentCount = 0;
    private IEnumerable<StudentDTO> student = Array.Empty<StudentDTO>();
    private void IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnInitializedAsync()
    {        

        var richiesta = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7211/api/Student");        

        var client = ClientFactory.CreateClient();

        var risposta = await client.SendAsync(richiesta);

        if (risposta.IsSuccessStatusCode)
        {
            using var responseStream = await risposta.Content.ReadAsStreamAsync();
            var options = new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true,
            };

         student = await JsonSerializer.DeserializeAsync<IEnumerable<StudentDTO>>(responseStream, options);

            
        }
        else
        {
            //getBranchesError = true;
        }

        //shouldRender = true;
    }
}
